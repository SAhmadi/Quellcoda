stages:
  - build
  - test
  - deploy

Build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  only:
    - master
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

Test:
  stage: test
  image: $CI_REGISTRY_IMAGE
  services:
    - docker:dind
  only:
    - master
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE
    - docker images
    - docker run $CI_REGISTRY_IMAGE python3 -m unittest discover -v
    - docker run -p 8080:8080 $CI_REGISTRY_IMAGE python3 -m unittest discover -v
    # - docker exec $BRANCH python3 -m unittest discover -v

Deploy:
  stage: deploy
  image: google/cloud-sdk:alpine
  only:
    - master
  script:
    - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    - gcloud config set project ba-serverless-testing
    - gcloud builds submit --tag eu.gcr.io/ba-serverless-testing/ba-serverless-testing-image
    - gcloud run deploy ba-serverless-testing --image eu.gcr.io/ba-serverless-testing/ba-serverless-testing-image --region europe-west1 --platform managed --allow-unauthenticated
    - rm /tmp/$CI_PIPELINE_ID.json